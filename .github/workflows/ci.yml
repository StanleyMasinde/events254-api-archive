name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
          - main
          - dev

jobs:
  build:
    runs-on: ubuntu-latest
    environment: test
    strategy:
      matrix:
        node-version: [16.x]
        redis-version: [6]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Start Redis
      uses: supercharge/redis-github-action@1.4.0
      with:
        redis-version: ${{ matrix.redis-version }}
    - name: Start Mysql Server
      run: sudo systemctl start mysql.service
    
    - name: Create Database
      run: |
         sudo mysql -e 'DROP DATABASE IF EXISTS events254_test;' -proot
         sudo mysql -e 'CREATE DATABASE events254_test;' -proot
         sudo mysql -e 'ALTER USER "root"@"localhost" IDENTIFIED WITH mysql_native_password BY "root";' -proot
         cp .env.example .env
    - name: Install dependencies
      run: npm ci
    - name: Linting ðŸ‘€
      run: npm run lint
    - name: Testing ðŸš€
      run: npm test
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Setup SSH
        run: |
           mkdir -p ~/.ssh/
           echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
      - name: Run the deployment command
        run: ssh -o StrictHostKeyChecking=no stanley@64.225.23.199 "ls /var/www"
    
